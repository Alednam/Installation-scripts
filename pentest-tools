#!/bin/bash
# =====================================================================
# Modern Pentest / VAPT + Red Team Toolkit Installer for Kali Linux
# =====================================================================

set -euo pipefail
LOGFILE="/var/log/kali_pentest_install.log"
TOOLS_DIR="/opt/pentest"

echo "[*] Updating Kali..."
sudo apt update -y && sudo apt full-upgrade -y | tee -a "$LOGFILE"

echo "[*] Installing essential packages..."
sudo apt install -y git curl wget unzip python3 python3-pip python3-venv \
    jq tmux net-tools snapd build-essential rlwrap \
    seclists gobuster feroxbuster wfuzz amass \
    nmap masscan hydra john hashcat crackmapexec \
    exploitdb metasploit-framework sqlmap nikto \
    bloodhound neo4j \
    | tee -a "$LOGFILE"

sudo mkdir -p "$TOOLS_DIR"
sudo chown $USER:$USER "$TOOLS_DIR"

# -----------------------
# Recon / Enumeration
# -----------------------
echo "[*] Installing recon tools..."
if [ ! -d "$TOOLS_DIR/Sublist3r" ]; then
    git clone https://github.com/aboul3la/Sublist3r.git "$TOOLS_DIR/Sublist3r"
    pip3 install -r "$TOOLS_DIR/Sublist3r/requirements.txt"
fi
if ! command -v assetfinder &>/dev/null; then
    go install github.com/tomnomnom/assetfinder@latest
    sudo cp ~/go/bin/assetfinder /usr/local/bin/
fi

# -----------------------
# Web / API Testing
# -----------------------
echo "[*] Installing web/API tools..."
if [ ! -d "$TOOLS_DIR/XSStrike" ]; then
    git clone https://github.com/s0md3v/XSStrike.git "$TOOLS_DIR/XSStrike"
    pip3 install -r "$TOOLS_DIR/XSStrike/requirements.txt"
fi
if [ ! -d "$TOOLS_DIR/Arjun" ]; then
    git clone https://github.com/s0md3v/Arjun.git "$TOOLS_DIR/Arjun"
    pip3 install -r "$TOOLS_DIR/Arjun/requirements.txt"
fi

# -----------------------
# Privilege Escalation
# -----------------------
echo "[*] Installing privilege escalation scripts..."
mkdir -p "$TOOLS_DIR/PEAS"
curl -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh -o "$TOOLS_DIR/PEAS/linpeas.sh"
curl -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/winPEASx64.exe -o "$TOOLS_DIR/PEAS/winPEASx64.exe"
chmod +x "$TOOLS_DIR/PEAS/linpeas.sh"

if [ ! -f "$TOOLS_DIR/lse.sh" ]; then
    curl -L https://raw.githubusercontent.com/diego-treitos/linux-smart-enumeration/master/lse.sh -o "$TOOLS_DIR/lse.sh"
    chmod +x "$TOOLS_DIR/lse.sh"
fi

# -----------------------
# Active Directory
# -----------------------
echo "[*] Installing AD tools..."
pip3 install impacket
if ! command -v kerbrute &>/dev/null; then
    curl -LO https://github.com/ropnop/kerbrute/releases/latest/download/kerbrute_linux_amd64
    chmod +x kerbrute_linux_amd64
    sudo mv kerbrute_linux_amd64 /usr/local/bin/kerbrute
fi

# -----------------------
# Cloud & Containers
# -----------------------
echo "[*] Installing cloud & container tools..."
if ! command -v trivy &>/dev/null; then
    curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh
fi
pip3 install scoutsuite
if [ ! -d "$TOOLS_DIR/pacu" ]; then
    git clone https://github.com/RhinoSecurityLabs/pacu.git "$TOOLS_DIR/pacu"
    cd "$TOOLS_DIR/pacu" && pip3 install -r requirements.txt
    cd -
fi

# -----------------------
# Red Team / C2 Frameworks
# -----------------------
echo "[*] Installing Red Team / C2 frameworks..."

# Sliver (C2)
if ! command -v sliver &>/dev/null; then
    curl -LO https://sliver.sh/install
    chmod +x install
    ./install
    rm install
fi

# Covenant (C2, requires dotnet)
if [ ! -d "$TOOLS_DIR/Covenant" ]; then
    sudo apt install -y dotnet-sdk-6.0
    git clone --recurse-submodules https://github.com/cobbr/Covenant "$TOOLS_DIR/Covenant"
    echo "[*] Covenant installed. To run: cd $TOOLS_DIR/Covenant/Covenant && dotnet run"
fi

# Empire (C2)
if [ ! -d "$TOOLS_DIR/Empire" ]; then
    git clone https://github.com/BC-SECURITY/Empire.git "$TOOLS_DIR/Empire"
    cd "$TOOLS_DIR/Empire"
    ./setup/install.sh
    cd -
fi

# Merlin (C2)
if [ ! -d "$TOOLS_DIR/Merlin" ]; then
    git clone https://github.com/Ne0nd0g/merlin.git "$TOOLS_DIR/Merlin"
    cd "$TOOLS_DIR/Merlin"
    make
    cd -
fi

# Mythic (C2, dockerized)
if [ ! -d "$TOOLS_DIR/Mythic" ]; then
    git clone https://github.com/its-a-feature/Mythic.git "$TOOLS_DIR/Mythic"
    cd "$TOOLS_DIR/Mythic"
    ./install_docker_ubuntu.sh
    cd -
fi

# -----------------------
# Wrap up
# -----------------------
echo "[*] Installation complete!"
echo "Custom tools installed in $TOOLS_DIR"
echo "Logs available at $LOGFILE"
echo ">> To start C2 frameworks manually: Sliver (sliver-server), Covenant (dotnet run), Empire (empire), Mythic (mythic-cli)"
